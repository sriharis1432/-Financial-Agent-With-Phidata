# -*- coding: utf-8 -*-
"""Financial Agent AI.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AoZAE8XJq9Rj4xsBY5rY4aCE6_-8CJ71
"""

import streamlit as st
from phi.agent import Agent
from phi.model.groq import Groq
from phi.tools.yfinance import YFinanceTools
from phi.tools.duckduckgo import DuckDuckGo
from typing import Dict, TypeVar, Any

# Patch for ToolConfig in Python 3.8.10
ToolConfig = TypeVar("ToolConfig", bound=Dict[str, Any])

# Define the agents
web_agent = Agent(
    name="Web Agent",
    model=Groq(id="llama-3.1-70b-versatile"),
    tools=[DuckDuckGo()],
    instructions=["Always include sources"],
    show_tool_calls=True,
    markdown=True,
)

finance_agent = Agent(
    name="Finance Agent",
    model=Groq(id="llama-3.1-70b-versatile"),
    tools=[YFinanceTools(stock_price=True, analyst_recommendations=True, company_info=True, company_news=True)],
    instructions=["Use tables to display data"],
    show_tool_calls=True,
    markdown=True,
)

multi_ai_agent = Agent(
    team=[web_agent, finance_agent],
    model=Groq(id="llama-3.1-70b-versatile"),
    instructions=["Always include sources", "Use tables to display data"],
    show_tool_calls=True,
    markdown=True,
)

# Streamlit App
st.title("Multi-Agent AI Application")

st.sidebar.title("Agent Selection")
agent_options = ["Web Agent", "Finance Agent", "Multi AI Agent"]
selected_agent = st.sidebar.radio("Select an Agent", agent_options)

st.sidebar.title("Instructions")
st.sidebar.write("""
- **Web Agent**: General queries with web search.
- **Finance Agent**: Financial queries like stock prices or analyst recommendations.
- **Multi AI Agent**: Complex queries combining both agents.
""")

# User Input
query = st.text_input("Enter your query:", "")

if st.button("Submit Query"):
    if query.strip() == "":
        st.warning("Please enter a valid query.")
    else:
        st.subheader("Response")
        with st.spinner("Processing your query..."):
            if selected_agent == "Web Agent":
                response = web_agent.ask(query, stream=False)
            elif selected_agent == "Finance Agent":
                response = finance_agent.ask(query, stream=False)
            else:  # Multi AI Agent
                response = multi_ai_agent.ask(query, stream=False)
            st.markdown(response)

